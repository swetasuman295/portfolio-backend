version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: portfolio-postgres
    environment:
      POSTGRES_DB: portfolio_db
      POSTGRES_USER: sweta
      POSTGRES_PASSWORD: sweta123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sweta"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka & Zookeeper for Event-Driven Architecture
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: portfolio-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - portfolio-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: portfolio-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - portfolio-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: portfolio-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - portfolio-network

  # Your Spring Boot Application 
  portfolio-backend:
    build: .
    container_name: portfolio-backend
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portfolio_db
      SPRING_DATASOURCE_USERNAME: sweta
      SPRING_DATASOURCE_PASSWORD: sweta123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - postgres
      - kafka
    networks:
      - portfolio-network

  # Frontend (Angular/React/Vue)
  portfolio-frontend:
    build: ../sweta-suman-portfolio
    container_name: portfolio-frontend
    ports:
      - "80:80"
    depends_on:
      - portfolio-backend
    networks:
      - portfolio-network

volumes:
  postgres_data:

networks:
  portfolio-network:
    driver: bridge